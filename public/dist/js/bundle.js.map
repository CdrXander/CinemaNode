{"version":3,"sources":["app.js","controllers/coverCtrl.js","controllers/detailCtrl.js","controllers/homeCtrl.js","controllers/mainCtrl.js","controllers/searchCtrl.js","controllers/shelvesCtrl.js","services/apiService.js","services/dummyData.js","services/omdbService.js","coverDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","authCheck","$q","$timeout","$http","$state","$rootScope","deferred","defer","get","success","user","resolve","reject","go","promise","state","url","templateUrl","controller","loggedin","otherwise","run","$scope","apiService","getUserShelfList","then","shelfList","addMovieToShelf","movie","shelf_id","console","log","$stateParams","omdbService","fullMovie","getMovieDetails","id","omdbData","getMovieById","CNData","shelves","getReviewsForMovie","reviews","pageNotWorking","getCurrentUser","currentUser","user_id","searchForMovies","searchTitle","movies","serviceData","loadMovieData","getUserMovies","service","port","baseURL","response","data","post","movie_id","userMovies","imdbID","Title","Poster","Year","own","watch","seen","getDummyData","title","searchResults","Search","directive","coverController","restrict","scope"],"mappings":"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","file":"bundle.js","sourcesContent":["/*\r\n*\r\n*\tCore Angular routing app\r\n*\tAuthor: Xander Hacking\r\n*\r\n*/\r\nangular.module('cinemaNode', ['ui.router']).config(function($stateProvider, $urlRouterProvider) {\r\n\t\r\n\tvar authCheck = function($q, $timeout, $http, $state, $rootScope) {\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get('/loggedin').success(function(user) {\r\n\t\t\tif(user !== '0') {\r\n\t\t\t\tdeferred.resolve();\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.reject();\r\n\t\t\t\t$state.go('login');\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n\t$stateProvider\r\n\t\t.state('home', {\r\n\t\t\turl: '/',\r\n\t\t\ttemplateUrl: './views/home.html',\r\n\t\t\tcontroller: 'homeCtrl',\r\n\t\t\tresolve: {\r\n\t\t\t\tloggedin:authCheck\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('shelves', {\r\n\t\t\turl: '/shelves',\r\n\t\t\ttemplateUrl:'./views/shelves.html',\r\n\t\t\tcontroller:'shelvesCtrl',\r\n\t\t\tresolve: {\r\n\t\t\t\tloggedin:authCheck\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\t.state('search', {\r\n\t\t\turl: '/search',\r\n\t\t\ttemplateUrl: './views/search.html',\r\n\t\t\tcontroller: 'searchCtrl',\r\n\t\t\tresolve: {\r\n\t\t\t\tloggedin:authCheck\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('details', {\r\n\t\t\turl: '/details/:id',\r\n\t\t\ttemplateUrl: './views/detail.html',\r\n\t\t\tcontroller: 'detailCtrl',\r\n\t\t\tresolve: {\r\n\t\t\t\tloggedin:authCheck\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('login', {\r\n\t\t\turl:'/login',\r\n\t\t\ttemplateUrl:'./views/login.html'\r\n\t\t});\r\n\r\n\t\t$urlRouterProvider.otherwise('/');\r\n\r\n}).run();\r\n","angular.module('cinemaNode').controller('coverCtrl', function($scope, apiService) {\r\n\t\r\n\tapiService.getUserShelfList().then(shelfList => {\r\n\t\t$scope.shelfList = shelfList;\r\n\t}); \r\n\r\n\t$scope.addMovieToShelf = function(movie, shelf_id) {\r\n\t\tapiService.addMovieToShelf(movie, shelf_id).then(response => {\r\n\t\t\tconsole.log(\"movie saved\");\r\n\t\t})\r\n\t}\r\n});\t\r\n","angular.module('cinemaNode').controller(\r\n\t'detailCtrl', function($scope, $stateParams, omdbService, apiService) {\r\n\r\n\r\n\tvar fullMovie = {};\r\n\r\n\tomdbService.getMovieDetails($stateParams.id).then(omdbData => {\r\n\t\tfullMovie = omdbData;\r\n\t\tapiService.getMovieById($stateParams.id).then(CNData => {\r\n\t\t\tif(!!CNData) {\r\n\t\t\t\tfullMovie.shelves = CNData.shelves;\r\n\t\t\t}\r\n\t\t\t$scope.movie = fullMovie;\r\n\t\t})\r\n\r\n\t});\r\n\r\n\tapiService.getReviewsForMovie($stateParams.id).then(reviews => {\r\n\t\t$scope.reviews = reviews;\r\n\t})\r\n\r\n\tapiService.getUserShelfList().then(shelfList => {\r\n\t\t$scope.shelfList = shelfList;\r\n\t}); \r\n\t\r\n\r\n\r\n\t$scope.addMovieToShelf = function(movie, shelf_id) {\r\n\t\tapiService.addMovieToShelf(movie, shelf_id).then(response => {\r\n\t\t\tconsole.log(\"movie saved\");\r\n\t\t})\r\n\t}\r\n\r\n})","angular.module('cinemaNode').controller('homeCtrl', function($scope) {\r\n\r\n\t$scope.pageNotWorking = \"Home Page is Working!\";\r\n\r\n})","angular.module('cinemaNode').controller('mainCtrl', function($scope, apiService) {\r\n\r\n\t$scope.pageNotWorking = \"Main Controller Working\";\r\n\r\n\tapiService.getCurrentUser().then(currentUser => {\r\n\t\tif(!!currentUser) {\r\n\t\t\t$scope.currentUser = currentUser;\r\n\t\t} else {\r\n\t\t\t$scope.currentUser = false;\r\n\t\t}\r\n\t})\r\n\r\n})","angular.module('cinemaNode').controller('searchCtrl', function($scope, omdbService, apiService) {\r\n\r\n\tvar user_id=1;\r\n\r\n\t$scope.searchForMovies = function() {\r\n\t\tomdbService.searchForMovies($scope.searchTitle).then(serviceData => {\r\n\t\t\t$scope.movies = serviceData;\r\n\t\t\tconsole.log($scope.movies);\r\n\t\t\t$scope.searchTitle = '';\r\n\t\t})\r\n\t}\r\n});","angular.module('cinemaNode').controller('shelvesCtrl', function($scope, apiService) {\r\n\r\n\t$scope.loadMovieData = function() {\r\n\t\tapiService.getUserMovies().then(serviceData => {\r\n\t\t\t$scope.shelves = serviceData;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// $scope.loadDummyMovieData();\r\n\t$scope.loadMovieData();\r\n})","angular.module(\"cinemaNode\").service(\"apiService\", function($http, $q) {\r\n\r\n\tvar port = 3000;\r\n\tvar baseURL = \"http://localhost:\" + port;\r\n\r\n\r\n\r\n//AUTHENTICATION\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\r\n\r\n//USERS =\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\r\n\tthis.getCurrentUser = () => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = baseURL + \"/user/current\";\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n//SHELVES \t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\r\n\r\n\t//GET shelves/movies for a user\r\n\tthis.getUserMovies = () => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = \"http://localhost:\" + port + \"/shelves/\";\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t} \r\n\r\n\t//GET list of shelf names for user\r\n\tthis.getUserShelfList = () => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = baseURL + \"/shelves/list/\";\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n//MOVIES \t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\r\n\r\n\t//CREATE record in shelf_movie (no need for user id, as is tied to shelf)\r\n\tthis.addMovieToShelf = (movie, shelf_id) => {\r\n\r\n\t\tvar data = {\r\n\t\t\t'movie':movie,\r\n\t\t\t'shelf_id':shelf_id\r\n\t\t};\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = baseURL + \"/movies/addtoshelf/\";\r\n\t\t$http.post(url,data)\r\n\t\t.success(response => {\r\n\r\n\t\t});\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tthis.getMovieById = movie_id => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = baseURL + \"/movies/movie/\" + movie_id;\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tif(!!response) {\r\n\t\t\t\tdeferred.resolve(response);\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.resolve(null);\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n//REVIEWS \t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\t=\r\n\r\n\tthis.getReviewsForMovie = movie_id => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = baseURL + \"/review/\" + movie_id;\r\n\t\t$http.get(url).success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t});\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n})","angular.module('cinemaNode').service('dummyDataService', function() {\r\n\r\n\r\n\r\n\tvar userMovies = [\r\n\t  {\r\n\t    imdbID: 'tt0372784',\r\n\t    Title: 'Batman Begins',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3._V1_SX300.jpg',\r\n\t    Year: '2005',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0468569',\r\n\t    Title: 'The Dark Knight',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SX300.jpg',\r\n\t    Year: '2008',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt1345836',\r\n\t    Title: 'The Dark Knight Rises',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_SX300.jpg',\r\n\t    Year: '2012',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2313197',\r\n\t    Title: 'Batman: The Dark Knight Returns, Part 1',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMzIxMDkxNDM2M15BMl5BanBnXkFtZTcwMDA5ODY1OQ@@._V1_SX300.jpg',\r\n\t    Year: '2012',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2166834',\r\n\t    Title: 'Batman: The Dark Knight Returns, Part 2',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ1Mjk1NTY2NV5BMl5BanBnXkFtZTgwMTA2MDEwNzE@._V1_SX300.jpg',\r\n\t    Year: '2013',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0107290',\r\n\t    Title: 'Jurassic Park',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMjM2MDgxMDg0Nl5BMl5BanBnXkFtZTgwNTM2OTM5NDE@._V1_SX300.jpg',\r\n\t    Year: '1993',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0119567',\r\n\t    Title: 'The Lost World: Jurassic Park',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMDFlMmM4Y2QtNDg1ZS00MWVlLTlmODgtZDdhYjY5YjdhN2M0XkEyXkFqcGdeQXVyNTI4MjkwNjA@._V1_SX300.jpg',\r\n\t    Year: '1997',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0163025',\r\n\t    Title: 'Jurassic Park III',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BZTU1ZWU4ZjUtZDMwYS00MmU4LWI3Y2UtZWVjMWIzODMyOWQ4XkEyXkFqcGdeQXVyNTM2NTY4NzU@._V1_SX300.jpg',\r\n\t    Year: '2001',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0369610',\r\n\t    Title: 'Jurassic World',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ5MTE0MTk3Nl5BMl5BanBnXkFtZTgwMjczMzk2NTE@._V1_SX300.jpg',\r\n\t    Year: '2015',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0080684',\r\n\t    Title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BYmViY2M2MTYtY2MzOS00YjQ1LWIzYmEtOTBiNjhlMGM0NjZjXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '1980',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0086190',\r\n\t    Title: 'Star Wars: Episode VI - Return of the Jedi',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BODllZjg2YjUtNWEzNy00ZGY2LTgyZmQtYTkxNDYyOWM3OTUyXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg',\r\n\t    Year: '1983',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0076759',\r\n\t    Title: 'Star Wars: Episode IV - A New Hope',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BZGEzZTExMDEtNjg4OC00NjQxLTk5NTUtNjRkNjA3MmYwZjg1XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg',\r\n\t    Year: '1977',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2488496',\r\n\t    Title: 'Star Wars: The Force Awakens',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_SX300.jpg',\r\n\t    Year: '2015',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0120915',\r\n\t    Title: 'Star Wars: Episode I - The Phantom Menace',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BM2FmZGIwMzAtZTBkMS00M2JiLTk2MDctM2FlNTQ2OWYwZDZkXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '1999',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0121766',\r\n\t    Title: 'Star Wars: Episode III - Revenge of the Sith',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNTc4MTc3NTQ5OF5BMl5BanBnXkFtZTcwOTg0NjI4NA@@._V1_SX300.jpg',\r\n\t    Year: '2005',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0121765',\r\n\t    Title: 'Star Wars: Episode II - Attack of the Clones',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNDRkYzA4OGYtOTBjYy00YzFiLThhYmYtMWUzMDBmMmZkM2M3XkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '2002',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt3748528',\r\n\t    Title: 'Rogue One: A Star Wars Story',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMjEwMzMxODIzOV5BMl5BanBnXkFtZTgwNzg3OTAzMDI@._V1_SX300.jpg',\r\n\t    Year: '2016',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  }\r\n\t]\t\r\n\r\n\tthis.getDummyData = function() {\r\n\t\treturn userMovies;\r\n\t}\r\n}) \r\n\r\n\r\n\r\n","angular.module('cinemaNode').service('omdbService', function($http, $q) {\r\n\r\n\t//Acquire search results for a movie\r\n\tthis.searchForMovies = title => {\r\n\t\tvar deferred = $q.defer();\r\n\r\n\t\tvar url = \"https://www.omdbapi.com/?s=\" + title + \"&page=1\";\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tvar searchResults = response.Search;\r\n\t\t\tdeferred.resolve(searchResults);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tthis.getMovieDetails = id => {\r\n\t\tvar deferred = $q.defer();\r\n\t    var url = \"https://www.omdbapi.com/?i=\" + id + \"&plot=full&r=json&tomatoes=true\";\r\n\r\n\t    $http.get(url) \r\n\t    .success( response => {\r\n\t    \tdeferred.resolve(response);\r\n\t    })\r\n\t    return deferred.promise;\r\n\t}\r\n\r\n})","angular.module('cinemaNode').directive('movieDisplay', function(){\r\n\r\n\r\n\tvar coverController = ['$scope', 'apiService', function($scope, apiService) {\r\n\t\t$scope.addMovieToShelf = function(movie, shelf_id) {\r\n\t\t\tapiService.addMovieToShelf(movie, shelf_id).then(response => {\r\n\t\t\t\tconsole.log(\"movie saved\");\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tapiService.getUserShelfList().then(shelfList => {\r\n\t\t\t$scope.shelfList = shelfList;\r\n\t\t}); \t\r\n\t}]\r\n\r\n\treturn {\r\n\t\trestrict: \"E\",\r\n\t\ttemplateUrl: './directives/coverDir.html',\r\n\t\tscope: {\r\n\t\t\tmovies: '='\r\n\t\t},\r\n\t\tcontroller:coverController\r\n\t}\r\n})"]}