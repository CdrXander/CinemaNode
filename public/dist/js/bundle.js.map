{"version":3,"sources":["app.js","services/apiService.js","services/dummyData.js","services/omdbService.js","controllers/detailCtrl.js","controllers/homeCtrl.js","controllers/searchCtrl.js","controllers/shelvesCtrl.js","coverDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","run","service","$http","$q","port","getUserMovies","deferred","defer","user_id","get","success","resolve","response","promise","getUserShelfList","addMovieToShelf","movie","shelf_id","data","post","userMovies","imdbID","Title","Poster","Year","own","watch","seen","getDummyData","searchForMovies","title","searchResults","Search","getMovieDetails","id","$scope","pageNotWorking","omdbService","apiService","then","userShelfList","shelfList","searchTitle","movies","serviceData","console","log","loadMovieData","shelves","directive","coverController","restrict","scope"],"mappings":"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","file":"bundle.js","sourcesContent":["/*\r\n*\r\n*\tCore Angular routing app\r\n*\tAuthor: Xander Hacking\r\n*\r\n*/\r\nangular.module('cinemaNode', ['ui.router']).config(function($stateProvider, $urlRouterProvider) {\r\n\t\r\n\r\n\t$stateProvider\r\n\t\t.state('home', {\r\n\t\t\turl: '/',\r\n\t\t\ttemplateUrl: './views/home.html',\r\n\t\t\tcontroller: 'homeCtrl'\r\n\t\t})\r\n\t\t.state('shelves', {\r\n\t\t\turl: '/shelves',\r\n\t\t\ttemplateUrl:'./views/shelves.html',\r\n\t\t\tcontroller:'shelvesCtrl'\r\n\t\t})\r\n\t\t.state('search', {\r\n\t\t\turl: '/search',\r\n\t\t\ttemplateUrl: './views/search.html',\r\n\t\t\tcontroller: 'searchCtrl'\r\n\t\t})\r\n\t\t.state('details', {\r\n\t\t\turl: '/details/:id',\r\n\t\t\ttemplateUrl: './views/detail.html',\r\n\t\t\tcontroller: 'detailCtrl'\r\n\t\t});\r\n\r\n}).run();\r\n","angular.module(\"cinemaNode\").service(\"apiService\", function($http, $q) {\r\n\r\n\tvar port = 3000;\r\n\r\n\r\n\r\n\t//GET shelves/movies for a user\r\n\tthis.getUserMovies = user_id => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = \"http://localhost:\" + port + \"/shelves/\" + user_id;\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t} \r\n\r\n\t//GET list of shelf names for user\r\n\tthis.getUserShelfList = user_id => {\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = \"http://localhost:\" + port + \"/shelves/list/\" + user_id;\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tdeferred.resolve(response);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n\t//CREATE record in shelf_movie (no need for user id, as is tied to shelf)\r\n\tthis.addMovieToShelf = (movie, shelf_id) => {\r\n\r\n\t\tvar data = {\r\n\t\t\t'movie':movie,\r\n\t\t\t'shelf_id':shelf_id\r\n\t\t};\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\tvar url = \"http://localhost:\" + port + \"/movies/addtoshelf/\";\r\n\t\t$http.post(url,data)\r\n\t\t.success(response => {\r\n\r\n\t\t});\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n})","angular.module('cinemaNode').service('dummyDataService', function() {\r\n\r\n\r\n\r\n\tvar userMovies = [\r\n\t  {\r\n\t    imdbID: 'tt0372784',\r\n\t    Title: 'Batman Begins',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3._V1_SX300.jpg',\r\n\t    Year: '2005',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0468569',\r\n\t    Title: 'The Dark Knight',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SX300.jpg',\r\n\t    Year: '2008',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt1345836',\r\n\t    Title: 'The Dark Knight Rises',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_SX300.jpg',\r\n\t    Year: '2012',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2313197',\r\n\t    Title: 'Batman: The Dark Knight Returns, Part 1',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMzIxMDkxNDM2M15BMl5BanBnXkFtZTcwMDA5ODY1OQ@@._V1_SX300.jpg',\r\n\t    Year: '2012',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2166834',\r\n\t    Title: 'Batman: The Dark Knight Returns, Part 2',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ1Mjk1NTY2NV5BMl5BanBnXkFtZTgwMTA2MDEwNzE@._V1_SX300.jpg',\r\n\t    Year: '2013',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0107290',\r\n\t    Title: 'Jurassic Park',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMjM2MDgxMDg0Nl5BMl5BanBnXkFtZTgwNTM2OTM5NDE@._V1_SX300.jpg',\r\n\t    Year: '1993',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0119567',\r\n\t    Title: 'The Lost World: Jurassic Park',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMDFlMmM4Y2QtNDg1ZS00MWVlLTlmODgtZDdhYjY5YjdhN2M0XkEyXkFqcGdeQXVyNTI4MjkwNjA@._V1_SX300.jpg',\r\n\t    Year: '1997',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0163025',\r\n\t    Title: 'Jurassic Park III',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BZTU1ZWU4ZjUtZDMwYS00MmU4LWI3Y2UtZWVjMWIzODMyOWQ4XkEyXkFqcGdeQXVyNTM2NTY4NzU@._V1_SX300.jpg',\r\n\t    Year: '2001',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0369610',\r\n\t    Title: 'Jurassic World',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ5MTE0MTk3Nl5BMl5BanBnXkFtZTgwMjczMzk2NTE@._V1_SX300.jpg',\r\n\t    Year: '2015',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0080684',\r\n\t    Title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BYmViY2M2MTYtY2MzOS00YjQ1LWIzYmEtOTBiNjhlMGM0NjZjXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '1980',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0086190',\r\n\t    Title: 'Star Wars: Episode VI - Return of the Jedi',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BODllZjg2YjUtNWEzNy00ZGY2LTgyZmQtYTkxNDYyOWM3OTUyXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg',\r\n\t    Year: '1983',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0076759',\r\n\t    Title: 'Star Wars: Episode IV - A New Hope',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BZGEzZTExMDEtNjg4OC00NjQxLTk5NTUtNjRkNjA3MmYwZjg1XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg',\r\n\t    Year: '1977',\r\n\t    own: true,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt2488496',\r\n\t    Title: 'Star Wars: The Force Awakens',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_SX300.jpg',\r\n\t    Year: '2015',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0120915',\r\n\t    Title: 'Star Wars: Episode I - The Phantom Menace',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BM2FmZGIwMzAtZTBkMS00M2JiLTk2MDctM2FlNTQ2OWYwZDZkXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '1999',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0121766',\r\n\t    Title: 'Star Wars: Episode III - Revenge of the Sith',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNTc4MTc3NTQ5OF5BMl5BanBnXkFtZTcwOTg0NjI4NA@@._V1_SX300.jpg',\r\n\t    Year: '2005',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt0121765',\r\n\t    Title: 'Star Wars: Episode II - Attack of the Clones',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BNDRkYzA4OGYtOTBjYy00YzFiLThhYmYtMWUzMDBmMmZkM2M3XkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_SX300.jpg',\r\n\t    Year: '2002',\r\n\t    own: true,\r\n\t    watch: false,\r\n\t    seen: true\r\n\t  },\r\n\t  {\r\n\t    imdbID: 'tt3748528',\r\n\t    Title: 'Rogue One: A Star Wars Story',\r\n\t    Poster: 'https://images-na.ssl-images-amazon.com/images/M/MV5BMjEwMzMxODIzOV5BMl5BanBnXkFtZTgwNzg3OTAzMDI@._V1_SX300.jpg',\r\n\t    Year: '2016',\r\n\t    own: false,\r\n\t    watch: true,\r\n\t    seen: true\r\n\t  }\r\n\t]\t\r\n\r\n\tthis.getDummyData = function() {\r\n\t\treturn userMovies;\r\n\t}\r\n}) \r\n\r\n\r\n\r\n","angular.module('cinemaNode').service('omdbService', function($http, $q) {\r\n\r\n\t//Acquire search results for a movie\r\n\tthis.searchForMovies = title => {\r\n\t\tvar deferred = $q.defer();\r\n\r\n\t\tvar url = \"https://www.omdbapi.com/?s=\" + title + \"&page=1\";\r\n\t\t$http.get(url)\r\n\t\t.success(response => {\r\n\t\t\tvar searchResults = response.Search;\r\n\t\t\tdeferred.resolve(searchResults);\r\n\t\t})\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tthis.getMovieDetails = id => {\r\n\t\tvar deferred = $q.defer();\r\n\t    var url = \"https://www.omdbapi.com/?i=\" + id + \"&plot=full&r=json&tomatoes=true\";\r\n\r\n\t    $http.get(url) \r\n\t    .success( response => {\r\n\t    \tdeferred.resolve(response);\r\n\t    })\r\n\t    return deferred.promise;\r\n\t}\r\n\r\n})","angular.module('cinemaNode').controller('detailCtrl', function($scope) {\r\n\r\n\t$scope.pageNotWorking = \"Details Page is Working\";\r\n\r\n})","angular.module('cinemaNode').controller('homeCtrl', function($scope) {\r\n\r\n\t$scope.pageNotWorking = \"Home Page is Working!\";\r\n\r\n})","angular.module('cinemaNode').controller('searchCtrl', function($scope, omdbService, apiService) {\r\n\r\n\tvar user_id=1;\r\n\r\n\tapiService.getUserShelfList(user_id).then(shelfList => {\r\n\t\t$scope.userShelfList = shelfList;\r\n\t});\r\n\r\n\t$scope.searchForMovies = function() {\r\n\t\tomdbService.searchForMovies($scope.searchTitle).then(serviceData => {\r\n\t\t\t$scope.movies = serviceData;\r\n\t\t\tconsole.log($scope.movies);\r\n\t\t\t$scope.searchTitle = '';\r\n\t\t})\r\n\t}\r\n});","angular.module('cinemaNode').controller('shelvesCtrl', function($scope, apiService) {\r\n\tvar user_id = 1;\r\n\r\n\t// $scope.loadDummyMovieData = function() {\r\n\t// \t$scope.ownedMovies = [];\r\n\t// \t$scope.watchMovies = [];\r\n\t// \t$scope.seenMovies  = [];\r\n\r\n\t// \tvar savedMovies = dummyDataService.getDummyData();\r\n\t// \tfor (let movie of savedMovies) {\r\n\t// \t\tif (movie.own === true) {\r\n\t// \t\t\t$scope.ownedMovies.push(movie);\r\n\t// \t\t}\r\n\t// \t\tif (movie.watch === true) {\r\n\t// \t\t\t$scope.watchMovies.push(movie);\r\n\t// \t\t}\r\n\t// \t\tif (movie.seen === true) {\r\n\t// \t\t\t$scope.seenMovies.push(movie);\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\t$scope.loadMovieData = function() {\r\n\t\tapiService.getUserMovies(user_id).then(serviceData => {\r\n\t\t\t$scope.shelves = serviceData;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// $scope.loadDummyMovieData();\r\n\t$scope.loadMovieData();\r\n})","angular.module('cinemaNode').directive('movieDisplay', function(){\r\n\r\n\r\n\tvar coverController = ['$scope', 'apiService', function($scope, apiService) {\r\n\t\t$scope.addMovieToShelf = function(movie, shelf_id) {\r\n\t\t\tapiService.addMovieToShelf(movie, shelf_id).then(response => {\r\n\t\t\t\tconsole.log(\"movie saved\");\r\n\t\t\t})\r\n\t\t}\t\r\n\t}]\r\n\r\n\treturn {\r\n\t\trestrict: \"E\",\r\n\t\ttemplateUrl: './directives/coverDir.html',\r\n\t\tscope: {\r\n\t\t\tmovies: '=',\r\n\t\t\tshelfList: '='\r\n\t\t},\r\n\t\tcontroller:coverController\r\n\t}\r\n\r\n\r\n\t\r\n})"]}